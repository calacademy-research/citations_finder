[general]
report_start_year = 2022
report_end_year = 2022
; Dumps stats on the papers downloaded from the year range above
report_on_start = False
exit_after_report = False
# For testing, generally.
download_single_doi_mode = False
download_single_doi = 10.1073/pnas.1719260115
; iterates only items that failed to download with populated
; unpaywall_downloader url fields. Recommended with firefox_downloader enabled
retry_failed_unpaywall_links = False



; Source for the DOIs
[crossref]
;  Force an update - typically used for an existing database.
; If the DOIs have never been pulled, then the system will download them
; in the year range specified in scan_for_dois_after_year. However, unless the
; scan_for_dois_after_year in general is pushed farther back, it will never download them again.
; To pull the most recent papers, enable force update and specify the oldest year
; to update, and re-run.
force_update = False
force_update_year = 2022
scan_for_dois_after_year = 2022



; The 'verify' step comes after the DOIs have been downloaded.
; For each DOI, the system checks to see if it's marked in the database as downloaded
; If not, it checks to see if the PDF exists on disk. If not, it
; attempts to download using the enabled downloader(s).
; if both the verify_single_journal and verify_all_journals are false, this step is skipped.
[verify]
verify_start_year = 2022
verify_end_year = 2023
; it is possible to enable single journal AND all journals mode, in which case
; single journal will run first.
verify_single_journal = False
verify_single_journal_issn = 1932-6203
verify_all_journals = True

; note, many options under "verify" apply here.
[downloaders]
pdf_directory = ./pdf
header_email = curator@museum.org
modules = ["unpaywall_downloader",]

; TODO: Archive.org downloader
parallel_downloader = False
# Recommend changing the default firefox save directory in firefox settings
firefox_save_directory = /Users/joe/firefox_save_directory

[unpaywall_downloader]
use_datetime_restriction = False
; %m/%d/%Y %H:%M:%S
retry_after_datetime = 7/5/2022 12:00:00
# Often, open source journals will provide a direct link, but this usually goes
# to an HTML version. Picking the actual URL out of that isn't implemented because it's
# easier to just go straight to unpaywall.
attempt_direct_link = False
# Use selenium to download firefiox - attempted if we get html response, which
# likely indicates an interception by cloudflare. Try it with a full user browser
# controlled through selenium
# requires gekodriver. Install on mac with "brew install geckodriver"
# Enable terminal and/or pycharm to control keyboard via security

# WARNING - CURRENTLY NUKES ~/DOWNLOADS DIRECTORY!!
firefox_downloader = True
retry_firefox_failure = False


[scan_reporting]
enabled = False
scan_report_start_year = 2022
scan_report_end_year = 2022

; (re)Scans the existing PDFs for regex matches.
[scan]
enabled = False
scan_start_year = 2022
scan_end_year = 2022

; "reset" causes a the whole scan database to be rebuilt.
; required most of the time; it won't pick up new PDFs without it
; (this comment taken from the code; needs verification)
reset_scan_database = False

; re-run scoring algorithm (typically after code changes)
rescore = False
; (re)scans papers for specimen IDs to map specimens back to papers published.


; location for the pdf->txt file conversion
scan_text_directory = ./txt

[scan_for_colleciton_ids]
enabled = False
reset_scan_database = False

; interactive validate step
[validate]
enabled = False
validate_start_year = 2022
validate_end_year = 2022

; copy identified PDFs to unique directory
; export TSV summary of scan results
[copyout]
enabled = False
target_dir = ./publish
copyout_start_year = 2022
copyout_end_year = 2022
copyout_pdfs = True
export_tsv = True








